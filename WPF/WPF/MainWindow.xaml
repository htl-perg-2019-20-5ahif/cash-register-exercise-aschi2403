<Window x:Class="WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <StackPanel Orientation="Horizontal">
        <ItemsControl Margin="10,10,5,10" ItemsSource="{Binding Path=Products}">
            <ItemsControl.ItemTemplate>
                <!-- Note how we turn every item in the itemscontrol into a button by
                            using a data template. -->
                <DataTemplate>
                    <!-- Note the use of a command binding here. Read more
                             at http://prismlibrary.github.io/docs/wpf/Implementing-MVVM.html#commands
                             The C# code in the view model will also make commands clearer -->
                    <!-- Note how we reference styles using `StaticResource` -->
                    <!-- Note the use of `RelativeSource` here. It is used to access properties of 
                             a parent control (in our case `ItemsControl`) -->
                    <Button Content="{Binding Path=ProductName}"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.AddToBasketCommand}"
                                CommandParameter="{Binding Path=ID}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <!-- Note how we switch the panel of the itemscontrol to a `WrapPanel`.
                     Therefore, buttons flow from left to right with line breaks. -->
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        <StackPanel>
            <DataGrid ItemsSource="{Binding Path=Products}"></DataGrid>
            <Label>Gesamtsumme: </Label>
            <Label Content="{Binding Path=Total}"></Label>
            <Button>Checkout</Button>
        </StackPanel>
    </StackPanel>
    
</Window>
